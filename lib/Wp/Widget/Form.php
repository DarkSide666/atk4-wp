<?php

/**
 *  Basic form Form use in Wp Widgets
 */
class Wp_Widget_Form extends Form_Basic
{
	public $fieldClassName = 'widefat';

	public function init()
	{
		parent::init();

		//we do not need js widget for this one.
		$this->js_widget = null;
	}

	/**
	 * Add Wordpress css class name to widget form field.
	 * @param $type
	 * @param null $options
	 * @param null $caption
	 * @param null $attr
	 *
	 * @return mixed
	 * @throws BaseException
	 */
	public function addField( $type, $options = null, $caption = null, $attr = null )
	{
		return parent::addField( $type, $options, $caption, $attr )->addClass( $this->fieldClassName );

	}

	protected function getChunks(){
		// commonly replaceable chunks
		$this->grabTemplateChunk('form_comment');
		$this->grabTemplateChunk('form_separator');
		$this->grabTemplateChunk('form_line');      // template for form line, must contain field_caption,field_input,field_error
		if($this->template->is_set('hidden_form_line'))
			$this->grabTemplateChunk('hidden_form_line');
		$this->grabTemplateChunk('field_error');    // template for error code, must contain field_error_str
		$this->grabTemplateChunk('field_mandatory');// template for marking mandatory fields

		// other grabbing will be done by field themselves as you will add them
		// to the form. They will try to look into this template, and if you
		// don't have apropriate templates for them, they will use default ones.
		$this->template_chunks['form']=$this->template;
		$this->template_chunks['form']->del('Content');
		$this->template_chunks['form']->del('form_buttons');
		$this->template_chunks['form']->trySet('form_name',$this->name.'_form');
		//$this->template_chunks['form']->set('form_action',$this->api->url(null,array('submit'=>$this->name)));

		return $this;
	}

	/*public function getHTML( $destroy = true, $execute_js = true ) {
		return parent::getHTML( $destroy, $execute_js ); // TODO: Change the autogenerated stub
	}*/

	public function defaultTemplate( )
	{
		return ['widget/form'];
	}
}